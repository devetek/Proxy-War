static_resources:
  listeners:
  - name: listener_http2
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: backend_route
            virtual_hosts:
            - name: backend_tokopedia_http2
              domains:
                - "devel.tokopedia.com"
              routes:
              - match:
                  path: "/"
                route:
                  cluster: backend-http2
              - match:
                  prefix: "/api"
                route:
                  cluster: backend-http1
              # - match:
              #     prefix: "/service/atreus"
              #   route:
              #     cluster: atreus
              # - match:
              #     regex: "^(.*)"
              #   route:
              #     cluster: atreus
          http_filters:
          - name: envoy.filters.http.router
      # tls_context:
      #   common_tls_context:
      #     alpn_protocols: ["h2,http/1.1"]
    per_connection_buffer_limit_bytes: 1024
  clusters:
  # - name: multiple
  #   connect_timeout: 1s
  #   type: STRICT_DNS
  #   lb_policy: round_robin
  #   http2_protocol_options: {}
  #   load_assignment:
  #     cluster_name: multiple
  #     endpoints:
  #     - lb_endpoints:
  #       - endpoint:
  #           health_check_config:
  #             port_value: 8080
  #           address:
  #             socket_address:
  #               address: thor
  #               port_value: 8080
  #       - endpoint:
  #           health_check_config:
  #             port_value: 8080
  #           address:
  #             socket_address:
  #               address: ares
  #               port_value: 8080
  - name: backend-http1
    connect_timeout: 1s
    type: STRICT_DNS
    lb_policy: round_robin
    # http2_protocol_options: {}
    per_connection_buffer_limit_bytes: 1024
    load_assignment:
      cluster_name: backend-http1
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: backend-http1
                port_value: 8080
  - name: backend-http2
    connect_timeout: 1s
    type: STRICT_DNS
    lb_policy: round_robin
    http2_protocol_options: {}
    per_connection_buffer_limit_bytes: 1024
    load_assignment:
      cluster_name: backend-http2
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: backend-http2
                port_value: 8080
  # - name: thor
  #   connect_timeout: 0.25s
  #   type: STRICT_DNS
  #   lb_policy: round_robin
  #   http2_protocol_options: {}
  #   load_assignment:
  #     cluster_name: thor
  #     endpoints:
  #     - lb_endpoints:
  #       - endpoint:
  #           address:
  #             socket_address:
  #               address: thor
  #               port_value: 8080
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
